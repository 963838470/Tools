<%-- 访问数据库的组件 --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%-- 参数 --%>
<%@ CodeTemplate ResponseEncoding="UTF-8" Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" %>

<%@ Property Name="命名空间" Type="String" Default="GMSWebApi.Model" Category="基本设置" %>
<%@ Property Name="是否包含可空标志" Type="Boolean" Default="false" Category="基本设置" %>
<%@ Property Name="数据表" Type="SchemaExplorer.TableSchema" Default="" Category="基本设置" %>
//*******************************************
//Author : chenbo
//DateTime : <%=DateTime.Now%>
//Description : 本文件由CodeSmith工具自动生成
//*******************************************
using System;
using System.Collections.Generic;

namespace <%=命名空间%>
{
    public partial class <%=GetModel(数据表)%>
    {
    <%
		foreach(ColumnSchema col in 数据表.Columns)
        {
    %>
    <% if(!string.IsNullOrWhiteSpace(col.Description)) { %>

        /// <summary>
        /// <%=col.Description.Replace("\r\n","").Replace("\n","") %>
        /// </summary>
    <% } %>
        public <%=GetDataType(col)%> <%=col.Name%> { get; set; }
    <%         
        }
    %>
    }
}
<script runat="template">
	//获取类名
	public string GetModel(TableSchema table)
	{
		return table.Name.Substring(table.Name.IndexOf("_") + 1).Replace("_","") + "Info";
	}
    
    public override string GetFileName() 
    {
        return GetModel(数据表) + ".cs";
    }

	/// <summary>
	/// 获取C#数据类型
	/// </summary>
	/// <param name="column">ColumnSchema:列对象，列数据类型</param>
	/// <returns>C#数据类型</returns>
	public string GetDataType(ColumnSchema col)
	{
        string nullString = "";     // 可空数据类型标志
        if(col.AllowDBNull && 是否包含可空标志) 
        {
            nullString = "?";
        }
		switch (col.DataType)
		{
			case DbType.AnsiString: return "string";
			case DbType.AnsiStringFixedLength: return "string";
			case DbType.Binary: return "byte[]";
			case DbType.Boolean: return "bool" + nullString;
			case DbType.Byte: return "int" + nullString;
			case DbType.Currency: return "decimal" + nullString;
			case DbType.Date: return "DateTime" + nullString;
			case DbType.DateTime: return "DateTime" + nullString;
			case DbType.DateTime2: return "DateTime" + nullString;
			case DbType.Decimal: return "decimal" + nullString;
			case DbType.Double: return "double" + nullString;
			case DbType.Guid: return "Guid" + nullString;
			case DbType.Int16: return "short" + nullString;
			case DbType.Int32: return "int" + nullString;
			case DbType.Int64: return "long" + nullString;
			case DbType.Object: return "string";
			case DbType.SByte: return "sbyte" + nullString;
			case DbType.Single: return "float" + nullString;
			case DbType.String: return "string";
			case DbType.StringFixedLength: return "string";
			case DbType.Time: return "TimeSpan" + nullString;
			case DbType.UInt16: return "ushort" + nullString;
			case DbType.UInt32: return "uint" + nullString;
			case DbType.UInt64: return "ulong" + nullString;
			case DbType.VarNumeric: return "decimal" + nullString;
			default: return "__UNKNOWN__" + col.NativeType;
		}
	}
</script>
