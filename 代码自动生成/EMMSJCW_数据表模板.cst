<%-- 
作者:陈博
版本:V1.0
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Description="实体层、DAL层、BLL层代码生成模板" ResponseEncoding="UTF-8"%>

<%-- 注册数据表生成模板 --%>
<%@ Register Name="ModelTemplate" Template="工具材料Model.cst" MergeProperties="Flase" ExcludeProperties="" Description="实体层模板" %>
<%@ Register Name="DALTemplate" Template="工具材料DAL.cst" MergeProperties="Flase" ExcludeProperties="" Description="实体层模板" %>
<%@ Register Name="BLLTemplate" Template="工具材料BLL.cst" MergeProperties="Flase" ExcludeProperties="" Description="实体层模板" %>

<%-- 数据库 --%>
<%@ Property Name="数据表" Type="SchemaExplorer.TableSchema" Optional="False" Category="基本设置"%>

<% GenerateFiles();%>
生成成功！
实体文件：<%= 输出路径 %>\<%= GetParseName(数据表) %>Info.cs
DAL文件：<%= 输出路径 %>\<%= GetParseName(数据表) %>DAL.cs
BLL文件：<%= 输出路径 %>\<%= GetParseName(数据表) %>BLL.cs
<script runat="template">
    /// <summary>
    /// 遍历数据库所有的表，生成对应模板文件
    /// </summary>   
    private void GenerateFiles()
    {
        ModelTemplate model = new ModelTemplate();
        DALTemplate dal = new DALTemplate();
        BLLTemplate bll = new BLLTemplate();
        
        TableSchema table = 数据表;
        // 实体层
        string modelPath = 输出路径 +"\\"+ GetParseName(table) + "Info.cs";
        model.SetProperty("数据表",table);
        model.RenderToFile(modelPath,true);
        // DAL
        string dalPath = 输出路径 +"\\"+ GetParseName(table) + "DAL.cs";
        dal.SetProperty("数据表",table);
        dal.RenderToFile(dalPath,true);
        // BLL
        string bllPath = 输出路径 +"\\"+ GetParseName(table) + "BLL.cs";
        bll.SetProperty("数据表",table);
        bll.RenderToFile(bllPath,true);
    }

    #region 配置参数-解决方案输出路径

    // 解决方案输出路径
    private string Directory = String.Empty;

    [Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))] 
    [Optional, NotChecked]
    [DefaultValue("")]
    [Category("基本设置")]
    public string 输出路径
    { 
        get
        {
            return Directory;
        }
        set
        {
            if (value.EndsWith("\\")) 
                value = value.Substring(0, value.Length -1);
                Directory = value;
        } 
    }
    
    public string GetParseName(TableSchema table)
    {
		return table.Name.Substring(table.Name.IndexOf("_") + 1).Replace("_","");
    }
    
    #endregion
</script>