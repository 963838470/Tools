<%-- 
Project: HuaweiSoftware Reader
Name: Model
Author: xietiecheng
Description: 2016-06-06  Version 1.0
--%>
<%@ CodeTemplate ResponseEncoding="UTF-8" Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="" %>
<%@ Property Name="OutputDirectory" Type="System.String" Default="" Optional="False" Category="基本设置" Description="命名空间" %>
<%@ Property Name="Namespace" Type="System.String" Default="HuaweiSoftware.Reader" Optional="False" Category="基本设置" Description="命名空间" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Default="" Optional="False" Category="参数设置" Description="数据表" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.IO" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%
    string OutputSubDirectory = OutputDirectory.EndsWith("\\") ? OutputDirectory : OutputDirectory + "\\";
    CreateOutputDirectory(OutputSubDirectory);
    
    CodeTemplate subTemplate = null;
    foreach(ColumnSchema col in SourceTable.Columns)
    {
        if(col.Table.Name.StartsWith("Node") && (col.Name.ToLower()=="status" || col.Name.EndsWith("Opt")))
        {
            //
        }
        else if(col.Name.ToLower()=="state" || col.Name.ToLower()=="status" || col.Name.EndsWith("Enum") || col.Name.EndsWith("Opt"))
        {
            subTemplate=CreateSubTemplate("ModelExtEnum.cst");
            if(subTemplate!=null)
            {
                subTemplate.SetProperty("Namespace", Namespace);
                subTemplate.SetProperty("TableName", GetClassName(SourceTable));
                subTemplate.SetProperty("FieldName", ConvertToPascal(col.Name));
                
                subTemplate.RenderToFile(string.Format("{0}{1}{2}Options.cs", OutputSubDirectory, GetClassName(SourceTable), ConvertToPascal(col.Name)), true);
            }
        }
    }
%>
<script runat="template">
	//Pascal命名法, 首字母大写
	public string ConvertToPascal(string str)
	{
		return str.Substring(0,1).ToUpper() + str.Substring(1);
	}
	//Camel命名法, 首字母小写
	public string ConvertToCamel(string str)
	{
		return str.Substring(0,1).ToLower() + str.Substring(1);
	}
	//获取类名
	public string GetClassName(TableSchema table)
	{
		return ConvertToPascal(table.Name);
	}
    //创建子模板
    public CodeTemplate CreateSubTemplate(string subTemplateName)
    {
        CodeTemplate _subTemplate=null;
        CodeTemplateCompiler compiler=new CodeTemplateCompiler(this.CodeTemplateInfo.DirectoryName + subTemplateName);
        compiler.Compile();
        
        if(compiler.Errors.Count==0)
        {
            _subTemplate=compiler.CreateInstance();
        }
        else
        {
            for(int i=0;i<compiler.Errors.Count;i++)
            {
                Response.WriteLine(compiler.Errors[i].ToString());
            }
        }
        
        return _subTemplate;
    }
    //创建子目录
    public void CreateOutputDirectory(string path)
    {
        if(!Directory.Exists(path)) 
            Directory.CreateDirectory(path); 
    }
</script>
